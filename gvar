#!/usr/bin/env bash

# GENV(1)
#
# NAME
#   gvar -- display, set, or remove global variables.
#
# SYNOPSIS
#   gvar [OPTION]... [VARIABLE=VALUE ...]...
#
# DESCRIPTION
#   Arguments of the form 'VARIABLE=VALUE' set the global variable VARIABLE to
#   value VALUE.
#   $ gvar VARIABLE=VALUE
#
#   VALUE can be empty ('VARIABLE='). Setting a variable to an empty value is
#   different from unsetting it.
#   $ gvar VARIABLE=
#
#   Print the value of the global variable VARIABLE.
#   $ gvar VARIABLE
#
#   If no argument is specified, prints out the names and values of the global
#   variables, with one name/value pair per line.
#   $ gvar
#
# OPTIONS
#   -u VARIABLE
#   --unset=VARIABLE
#        remove variable VARIABLE, if it was set.
#
#   -h
#   --help
#       display this help and exit.
#
#   -v
#   --version
#       output version information and exit.
#
# EXIT STATUS
#     The gvar utility exits 0 on success, and >0 if an error occurs.


version="0.1.0"
file=$HOME/.gvar
test -e $file || touch $file

getvar() {
  cat $file | grep -w $1 | cut -d'=' -f2
}

for arg in "$@"; do
  case $arg in
    -h|--help)
      echo "usage: gvar [variable[=value]] [-u variable | --unset=variable]"
      echo "            [-h | --help] [-v | --version]"
      break
    ;;
    -v|--version)
      echo "gvar version $version"
      break
    ;;
    -u)
      VALUE="$2"
      echo $VALUE
      break
    ;;
    --unset=*)
      VALUE="${i#*=}"
      echo $VALUE
      break
    ;;
    *=*)
      VARIABLE="${i%=*}"
      VALUE="${i#*=}"
      echo $VARIABLE
      echo $VALUE
    ;;
    *)
      variable="$1"
      getvar $variable
      break
    ;;
  esac
done

if [[ $# == 0 ]]; then
  cat $file
fi
